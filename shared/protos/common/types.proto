syntax = "proto3";

package kaizen.common.v1;

option go_package = "github.com/wunderkennd/kaizen-web/pkg/proto/common/v1";

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";

// PCM Stage enumeration
enum PCMStage {
  PCM_STAGE_UNSPECIFIED = 0;
  PCM_STAGE_AWARENESS = 1;
  PCM_STAGE_ATTRACTION = 2;
  PCM_STAGE_ATTACHMENT = 3;
  PCM_STAGE_ALLEGIANCE = 4;
}

// User identification
message UserID {
  string uuid = 1;
  string external_id = 2;
}

// User context for all services
message UserContext {
  UserID user_id = 1;
  PCMStage pcm_stage = 2;
  map<string, string> attributes = 3;
  repeated UserPreference preferences = 4;
  google.protobuf.Timestamp last_updated = 5;
}

// User preferences
message UserPreference {
  string key = 1;
  google.protobuf.Any value = 2;
  google.protobuf.Timestamp updated_at = 3;
}

// UI Component definition
message UIComponent {
  string id = 1;
  string type = 2;
  map<string, google.protobuf.Any> props = 3;
  repeated UIComponent children = 4;
  map<string, string> validation = 5;
}

// Layout definition
message Layout {
  enum LayoutType {
    LAYOUT_TYPE_UNSPECIFIED = 0;
    LAYOUT_TYPE_RESPONSIVE = 1;
    LAYOUT_TYPE_FIXED = 2;
    LAYOUT_TYPE_FLUID = 3;
  }
  
  LayoutType type = 1;
  repeated GridItem grid = 2;
}

// Grid item for layout
message GridItem {
  int32 x = 1;
  int32 y = 2;
  int32 width = 3;
  int32 height = 4;
  string component_id = 5;
}

// Event metadata
message EventMetadata {
  string event_id = 1;
  string event_type = 2;
  google.protobuf.Timestamp timestamp = 3;
  string source = 4;
  map<string, string> labels = 5;
}

// Request metadata for tracing
message RequestMetadata {
  string request_id = 1;
  string trace_id = 2;
  string span_id = 3;
  map<string, string> headers = 4;
}